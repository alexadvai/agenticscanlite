import type { WebAppScan } from "./types";

export const mockScans: WebAppScan[] = [
  {
    id: "scan-001",
    targetUrl: "https://e-corp.com/api",
    scanMode: "Active",
    authMethod: "none",
    status: "completed",
    agentId: "agent-zap-01",
    submittedBy: "user-1",
    createdAt: new Date("2024-07-28T10:00:00Z").toISOString(),
    startedAt: new Date("2024-07-28T10:01:00Z").toISOString(),
    completedAt: new Date("2024-07-28T10:30:00Z").toISOString(),
    vulns: [
      {
        id: "vuln-001a",
        type: "SQL Injection",
        severity: "Critical",
        url: "/api/users?id=1",
        payload: "' OR 1=1 --",
        description: "SQL Injection vulnerability in the user lookup endpoint allows for unauthorized data access.",
      },
      {
        id: "vuln-001b",
        type: "Reflected XSS",
        severity: "High",
        url: "/search?q=<script>",
        payload: "<script>alert('XSS')</script>",
        description: "Reflected Cross-Site Scripting (XSS) in search functionality can lead to session hijacking.",
      },
    ],
    score: 35,
    recommendations: ["Use parameterized queries for all database interactions.", "Implement a strict Content Security Policy (CSP).", "Validate and sanitize all user input."],
    reportUrl: "/reports/scan-001.pdf",
  },
  {
    id: "scan-002",
    targetUrl: "https://friendface.io",
    scanMode: "Authenticated",
    authMethod: "header",
    status: "running",
    agentId: "agent-zap-02",
    submittedBy: "user-2",
    createdAt: new Date("2024-07-29T11:00:00Z").toISOString(),
    startedAt: new Date("2024-07-29T11:02:00Z").toISOString(),
    vulns: [],
    score: 0,
    recommendations: [],
  },
  {
    id: "scan-003",
    targetUrl: "https://allsafe.security",
    scanMode: "Passive",
    authMethod: "none",
    status: "queued",
    agentId: "agent-zap-01",
    submittedBy: "user-1",
    createdAt: new Date("2024-07-29T11:05:00Z").toISOString(),
    vulns: [],
    score: 0,
    recommendations: [],
  },
  {
    id: "scan-004",
    targetUrl: "https://example-bank.com",
    scanMode: "Active",
    authMethod: "none",
    status: "failed",
    agentId: "agent-zap-03",
    submittedBy: "user-3",
    createdAt: new Date("2024-07-27T14:00:00Z").toISOString(),
    startedAt: new Date("2024-07-27T14:01:00Z").toISOString(),
    completedAt: new Date("2024-07-27T14:05:00Z").toISOString(),
    vulns: [],
    score: 0,
    recommendations: ["Scan failed to complete. The target may be down or blocking scanner requests. Please verify the target and try again."],
  },
    {
    id: "scan-005",
    targetUrl: "https://secure-shopping.co",
    scanMode: "Authenticated",
    authMethod: "form",
    status: "completed",
    agentId: "agent-zap-02",
    submittedBy: "user-2",
    createdAt: new Date("2024-07-26T09:00:00Z").toISOString(),
    startedAt: new Date("2024-07-26T09:01:00Z").toISOString(),
    completedAt: new Date("2024-07-26T09:45:00Z").toISOString(),
    vulns: [
      {
        id: "vuln-005a",
        type: "Insecure Direct Object References (IDOR)",
        severity: "High",
        url: "/api/orders/123",
        payload: "Changed authenticated user context to access another user's order.",
        description: "User is able to view orders of other users by changing the order ID in the URL.",
      },
       {
        id: "vuln-005b",
        type: "Missing Security Headers",
        severity: "Low",
        url: "/",
        payload: "N/A",
        description: "The application is missing key security headers like Strict-Transport-Security.",
      },
    ],
    score: 72,
    recommendations: ["Implement proper access control checks for all user-specific resources.", "Add HSTS headers to enforce HTTPS."],
    reportUrl: "/reports/scan-005.pdf",
  },
];
