// src/ai/flows/explain-vulnerability.ts
'use server';

/**
 * @fileOverview A flow for explaining vulnerabilities using an AI assistant.
 *
 * - explainVulnerability - A function that takes a vulnerability description and returns an explanation.
 * - ExplainVulnerabilityInput - The input type for the explainVulnerability function.
 * - ExplainVulnerabilityOutput - The return type for the explainVulnerability function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const ExplainVulnerabilityInputSchema = z.object({
  vulnerabilityDescription: z.string().describe('The description of the vulnerability to explain.'),
});
export type ExplainVulnerabilityInput = z.infer<typeof ExplainVulnerabilityInputSchema>;

const ExplainVulnerabilityOutputSchema = z.object({
  explanation: z.string().describe('The AI-generated explanation of the vulnerability.'),
});
export type ExplainVulnerabilityOutput = z.infer<typeof ExplainVulnerabilityOutputSchema>;

export async function explainVulnerability(input: ExplainVulnerabilityInput): Promise<ExplainVulnerabilityOutput> {
  return explainVulnerabilityFlow(input);
}

const prompt = ai.definePrompt({
  name: 'explainVulnerabilityPrompt',
  input: {schema: ExplainVulnerabilityInputSchema},
  output: {schema: ExplainVulnerabilityOutputSchema},
  prompt: `You are a cybersecurity expert explaining a vulnerability to a security analyst.
  Provide a detailed explanation of the following vulnerability, including its potential impact and remediation steps:
  
  {{{vulnerabilityDescription}}}
  `,
});

const explainVulnerabilityFlow = ai.defineFlow(
  {
    name: 'explainVulnerabilityFlow',
    inputSchema: ExplainVulnerabilityInputSchema,
    outputSchema: ExplainVulnerabilityOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
